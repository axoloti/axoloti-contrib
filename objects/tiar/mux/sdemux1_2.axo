<objdefs appVersion="1.0.12">
   <obj.normal id="sdemux1_2" uuid="2e4c6dcc-910c-4954-85f1-8e923c0bb713">
      <sDescription>Smooth demultiplexer. Works like multiple cross fades.</sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>sdemux1_4.axh</helpPatch>
      <inlets>
         <frac32buffer name="i" description="input"/>
         <frac32.positive name="s"/>
      </inlets>
      <outlets>
         <frac32buffer name="o0" description="output 0"/>
         <frac32buffer name="o1" description="output 1"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[void proc(int32_t sel, int32_t *o0, int32_t *o1, const int32_t *in){
  int32_t *s0, *s1;
  switch(sel >> (27-1)){
    case 0:  s0 = o0;  s1 = o1;  break;
    case 1:  s0 = o1;  s1 = o0;  break;
  } 
  int32_t a1 = (sel<<1) & 0x07FFFFFF;
  int32_t a0 = 0x07FFFFFF-a1;
  for(int i = 0; i < BUFSIZE; i++){
    s0[i] = ___SMMUL(in[i], a0)<<5;
    s1[i] = ___SMMUL(in[i], a1)<<5;
  }
}]]></code.declaration>
      <code.krate><![CDATA[proc((inlet_s) & 0x07FFFFFF, outlet_o0, outlet_o1, inlet_i);]]></code.krate>
   </obj.normal>
</objdefs>