<objdefs appVersion="1.0.12">
   <obj.normal id="inject" uuid="e1811111-5cea-4711-aedf-2e2af1a00733">
      <sDescription>injects a signal into a delay line</sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>inject.axh</helpPatch>
      <inlets>
         <frac32buffer name="in"/>
         <frac32.bipolar name="gain"/>
      </inlets>
      <outlets/>
      <displays/>
      <params>
         <frac32.u.map name="gain"/>
         <int32 name="pos">
            <MinValue i="0"/>
            <MaxValue i="65536"/>
         </int32>
      </params>
      <attribs>
         <objref name="delayName"/>
      </attribs>
      <code.declaration><![CDATA[
]]></code.declaration>
      <code.init><![CDATA[
	  ]]></code.init>
      <code.krate><![CDATA[
int32_t gain = __USAT(param_gain + inlet_gain, 29);
// note: read/write indexes are set BUFSIZE samples back as we will process a batch of BUFSIZE samples
// so beware of overlappings when param_delays defer by less than 16 samples 
int32_t rw = (attr_delayName.writepos - (BUFSIZE - 1) - param_pos) & attr_delayName.LENGTHMASK;

// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
for(int i = 0; i < BUFSIZE; i++){
  //                                       q27       q27   
  attr_delayName.array[rw] =  ___SMMLA(inlet_in[i], gain, attr_delayName.array[rw]<<(22-15))>>(22-15);
  rw = (rw + 1) & attr_delayName.LENGTHMASK;
}]]></code.krate>
   </obj.normal>
</objdefs>