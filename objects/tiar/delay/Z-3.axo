<objdefs appVersion="1.0.12">
   <obj.normal id="Z-3" uuid="7396178e-650d-49d8-36fb-3d7fc1cd2ba5">
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>Z-3.axh</helpPatch>
      <inlets>
         <frac32buffer name="in"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[
int32_t d[3];
]]></code.declaration>
      <code.init><![CDATA[
for(int i = 0; i < 3; i++){
  d[i] = 0;
}
      ]]></code.init>
      <code.krate><![CDATA[
/*
//local:
int32_t d[4];
uint8_t c = 0;
//krate  
for(int i = 0; i < BUFSIZE; i++){
  outlet_out[i] = d[(c + 2) & 3];  // 0 <-> previous i.e. -1
  c--; c &= 3;
  d[c] = inlet_in[i];
}
*/      
      
for(int i = 0; i < 3; i++){
  outlet_out[i] = d[i];
  d[i] = inlet_in[i + 13];
}
for(int i = 3; i < BUFSIZE; i++){
  outlet_out[i] = inlet_in[i - 3];
}

//todo use memcpy(dest,src,len) ?
/*
memcpy(outlet_out,     d,                      4*(        3));
memcpy(outlet_out + 3, inlet_in,               4*(BUFSIZE-3));
memcpy(d,              inlet_in + BUFSIZE - 3, 4*(        3));
*/
      ]]></code.krate>
   </obj.normal>
</objdefs>

