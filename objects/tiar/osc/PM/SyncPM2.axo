<objdefs appVersion="1.0.12">
   <obj.normal id="SyncPM2" uuid="ae4d5d97-31d8-460e-8671-5901bc508c8a">
      <sDescription></sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>SyncPM2.axh</helpPatch>
      <inlets>
         <frac32.bipolar name="pitch" description="pitch"/>
         <frac32.bipolar name="pitchC"/>
         <frac32.bipolar name="pitchM"/>
         <frac32.bipolar name="index"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="out" description=""/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch" noLabel="true"/>
         <frac32.s.map.pitch name="pitchC"/>
         <frac32.s.map.pitch name="pitchM"/>
         <frac32.u.map name="index"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[uint32_t pC;
uint32_t pM;
int32_t dpC, dpM;
int32_t index;
float pMast;
float dpMast, _dpMast;]]></code.declaration>
<code.init><![CDATA[
pC = 0;
pM = 0;
pMast = 0;
]]></code.init>


      <code.krate><![CDATA[int32_t idp;
MTOFEXTENDED(inlet_pitch + param_pitch, idp);
dpMast = (0.25f / (1 << 30)) * idp;
_dpMast = 1.0f / dpMast;

MTOFEXTENDED(inlet_pitchC + param_pitchC, dpC);
MTOFEXTENDED(inlet_pitchM + param_pitchM, dpM);
index = inlet_index + param_index;]]></code.krate>
      <code.srate><![CDATA[pC += dpC;
pM += dpM;
int32_t y = sine2t[(___SMMLA(index, sine2t[pM >> 20], pC >> 7) >> 13) & 4095] >> 5;
if(pMast>0.9f){
	y = (int32_t)(y*10*(1-pMast));
} 
if(pMast<0.1f){
	y = (int32_t)(y*10*pMast);
}
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

pMast += dpMast;
if(pMast > 1){
  pMast -= 1;
  float a = pMast * _dpMast;
  pC = (uint32_t)(a * dpC);
  pM = (uint32_t)(a * dpM);
/*  y = (y + (sine2t[(___SMMLA(index, sine2t[pM >> 20], pC >> 7) >> 13) & 4095] >> 5)) >> 1;*/
}
outlet_out = y;]]></code.srate>
   </obj.normal>
</objdefs>