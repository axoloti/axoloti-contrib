<objdefs appVersion="1.0.12">
   <obj.normal id="THRU" uuid="24d3f6de-6649-4db2-bc5c-d1264d51b1c9">
      <sDescription>midi thru module for all channels and all data types</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>midi_in.axh</helpPatch>
      <inlets/>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <combo name="device">
            <MenuEntries>
               <string>din</string>
               <string>usb host port 1</string>
               <string>usb host port 2</string>
               <string>usb host port 3</string>
               <string>usb host port 4</string>
               <string>usb device port 1</string>
            </MenuEntries>
            <CEntries>
               <string>MIDI_DEVICE_DIN, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 2</string>
               <string>MIDI_DEVICE_USB_HOST, 3</string>
               <string>MIDI_DEVICE_USB_HOST, 4</string>
               <string>MIDI_DEVICE_USB_DEVICE, 1</string>
            </CEntries>
         </combo>
      </attribs>
      <code.midihandler><![CDATA[if (status==MIDI_SONG_POSITION) {
MidiSend3((midi_device_t) attr_device, status,data1,data2);
}
else if((status==MIDI_TIMING_CLOCK)||(status==MIDI_START)||(status==MIDI_CONTINUE)||(status==MIDI_STOP))
{MidiSend1((midi_device_t) attr_device, status);}
else if(status)
{
MidiSend3((midi_device_t) attr_device, status,data1,data2);
}]]></code.midihandler>
   </obj.normal>
</objdefs>