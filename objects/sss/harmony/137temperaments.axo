<objdefs appVersion="1.0.12">
   <obj.normal id="137temperaments" uuid="c7fc534e-2504-4c30-b76a-e3d5c5e1bded">
      <sDescription>Temperament module with 137 different temperaments taken from historic composers.
For this module to work, first create a project containing the &quot;scaleGenerator&quot; module and press play (you only have to do this once for each SDcard!). This automatically creates a file on your SDcard, which will be called upon by the &quot;scaleBank2&quot; module.
The scalebank2 module will contain data for the 46scales module as well as the 137 temperaments module, so these can be combined to easily choose between different keys, scales and temperaments on the fly.

This module also adds a &quot;stretch&quot; function, that stretches each octave up by a couple of cents, creating lovely unison voices.
(till further notice) I&apos;ll let this function be up to the user to decide what the stretch will be.
The stretch-knob&apos;s value is divided by 1024, giving it an accuracy of tenth of cents per octave and will be needed to be tuned by ear (best done in polyphonic setting with harmonically rich waveforms)</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <frac32 name="in"/>
         <int32 name="temper"/>
         <frac32 name="stretch"/>
      </inlets>
      <outlets>
         <frac32 name="out"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <objref name="scale"/>
      </attribs>
      <code.declaration><![CDATA[int i;]]></code.declaration>
      <code.krate><![CDATA[int mn=(inlet_in+(1<<20)>>21)+8;
int32_t stretch=mn/12;

stretch=stretch*(inlet_stretch/1000);
int oct=mn/12*12;
oct=inlet_in<0?oct-12:oct;
mn=mn-oct;
int tmpr=inlet_temper;
tmpr=tmpr-tmpr/137*137;
tmpr+=tmpr<0?137:0;
tmpr*=12;
outlet_out=attr_scale.TMPR[mn+tmpr]+inlet_in+stretch;//+(mn+oct<<21);//]]></code.krate>
   </obj.normal>
</objdefs>