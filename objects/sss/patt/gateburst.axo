<objdefs appVersion="1.0.12">
   <obj.normal id="gateburst" uuid="549aa64c-9c00-4e77-a0ce-37901cc75a27">
      <sDescription>Gate burst generator
min/max controls set the minimum and maximum trigger length (after how many input-triggers it retriggers).
Minimum is 2 (up and down cost 2 triggers).
So connect this to a clock that&apos;s running twice, tripple or four times the base tempo.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>counter.axh</helpPatch>
      <inlets>
         <bool32.rising name="trig" description="trigger"/>
         <bool32 name="rnd"/>
         <bool32.rising name="r" description="reset"/>
      </inlets>
      <outlets>
         <bool32 name="gate"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="length" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="65536"/>
         </int32>
         <frac32.u.map name="chance"/>
         <int32 name="max">
            <MinValue i="2"/>
            <MaxValue i="16"/>
         </int32>
         <int32 name="min">
            <MinValue i="2"/>
            <MaxValue i="16"/>
         </int32>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int ntrig;
   int rtrig,DO=1;
   int count;
int cnt[64],CNT;
int step,rnd;]]></code.declaration>
      <code.init><![CDATA[count=0;
   ntrig = 0;
   rtrig = 0;
   step=1;]]></code.init>
      <code.krate><![CDATA[int RND=inlet_rnd||DO;
if(RND&&!rnd){
	DO=0;
	rnd=1;
	for(int i=0;i<8;i++){
		cnt[i]=(int32_t)(GenerateRandomNumber()>>1);
	}
}
else if(rnd&&!RND){rnd=0;}

if ((inlet_trig>0) && !ntrig) {
if((count%step)<1)
{
	if((GenerateRandomNumber()>>5)<param_chance)
	{	int dif=param_max-param_min;
		int dir=dif>=0?1:-1;
		dif=(dif>0?dif:-dif)+1;
		step=(cnt[CNT]%(dif))*dir+param_min;
		CNT=(CNT+1)&63;
	}
}
count+=1;
count=count>=param_length?0:count;
   ntrig=1;
}
else if (!(inlet_trig>0)) {ntrig=0;}


if ((inlet_r>0) && !rtrig) {
	count=0;
	CNT=0;
	rtrig = 1;}
else if (!(inlet_r>0)) rtrig=0;

if(step&1){
	if(step<5)
	{
		//outlet_gate=(count%step)>(step>>1);
		outlet_gate=((count%step)<(step-1+(1>>1)));
	}
	else
	{
		outlet_gate=!((count%step)>(step>>1));
	}
}
else{
	if(step<5)
	{
	outlet_gate=((count%step)<(step-1+(1>>1)));
	}
	else
	{
		outlet_gate=((count%step)>=(step>>1));
	}
}]]></code.krate>
   </obj.normal>
</objdefs>