<patch-1.0 appVersion="1.0.12">
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_3" x="168" y="28">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB7"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_3" x="280" y="28">
      <params/>
      <attribs/>
   </obj>
   <obj type="timer/delayedpulse" uuid="3f05ee534ca67755fb20c7437f9e4de3d4c2f73d" name="delayedpulse_1" x="364" y="28">
      <params>
         <frac32.s.map name="delay" value="29.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="patch/load" uuid="634bf1f8c313920d7f19fc402ba937fd1ee27802" name="load_2" x="518" y="42">
      <params/>
      <attribs>
         <table attributeName="filename" table="../GM5/patch.bin"/>
      </attribs>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_4" x="168" y="112">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB6"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_4" x="280" y="112">
      <params/>
      <attribs/>
   </obj>
   <obj type="timer/delayedpulse" uuid="3f05ee534ca67755fb20c7437f9e4de3d4c2f73d" name="delayedpulse_2" x="364" y="126">
      <params>
         <frac32.s.map name="delay" value="29.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="patch/load" uuid="634bf1f8c313920d7f19fc402ba937fd1ee27802" name="load_3" x="518" y="154">
      <params/>
      <attribs>
         <table attributeName="filename" table="../GM3/patch.bin"/>
      </attribs>
   </obj>
   <patcher type="patch/patcher" uuid="ca904930-32fd-451a-8af5-3d23e6b4ddbb" name="patcher_1" x="154" y="252">
      <params>
         <frac32.s.map name="adsr_1:d" value="8.0"/>
         <frac32.s.map name="adsr_3:d" value="26.0"/>
         <frac32.s.map name="adsr_2:d" value="-30.0"/>
         <frac32.s.map name="bp_1:pitch" value="-25.0"/>
         <frac32.s.map name="vcf4pole2x_1:pitch" value="-33.0"/>
         <frac32.s.map name="d_1" value="-40.0"/>
         <frac32.u.map name="mix_3:gain1" value="46.0"/>
         <frac32.u.map name="mix_3:gain2" value="15.0"/>
      </params>
      <attribs>
         <combo attributeName="poly" selection="4"/>
      </attribs>
      <subpatch appVersion="1.0.12">
         <obj type="env/ahd" uuid="2139369d6de2ba5ddf76e602d1d25df653ca9eed" name="ahd_1" x="238" y="28">
            <params>
               <frac32.s.map name="a" value="64.0"/>
               <frac32.s.map name="d" value="-62.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="env/adsr" uuid="d1dbcc5fa6f87b98a6a91c87fd44acee5e690bac" name="adsr_1" x="518" y="98">
            <params>
               <frac32.s.map name="a" value="-64.0"/>
               <frac32.s.map name="d" onParent="true" value="-1.0"/>
               <frac32.u.map name="s" value="0.0"/>
               <frac32.s.map name="r" value="-28.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="midi/in/bend" uuid="7bd8cace52a8c26ed61d80f65e238408d5d621f4" name="bend_1" x="126" y="126">
            <params/>
            <attribs/>
         </obj>
         <obj type="mix/mix 2" uuid="682ea5496ded046d981e26b720a6e7f8eca97541" name="mix_2" x="280" y="168">
            <params>
               <frac32.u.map name="gain1" value="2.0"/>
               <frac32.u.map name="gain2" value="0.8499999046325684"/>
            </params>
            <attribs/>
         </obj>
         <obj type="osc/sine" uuid="6e094045cca76a9dbf7ebfa72e44e4700d2b3ba" name="sine_1" x="392" y="168">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_2" x="70" y="196">
            <params>
               <frac32.s.map name="pitch" value="-2.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="644" y="196">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_1" x="196" y="210">
            <params/>
            <attribs/>
         </obj>
         <obj type="midi/in/keyb" uuid="53b04874696932f38aceaa168bd5d9efb743716d" name="keyb_1" x="98" y="294">
            <params/>
            <attribs/>
         </obj>
         <obj type="osc/tri" uuid="905879afa8256b0ca207557d656949e476ca6f16" name="tri_1" x="392" y="308">
            <params>
               <frac32.s.map name="pitch" value="-12.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="env/adsr" uuid="d1dbcc5fa6f87b98a6a91c87fd44acee5e690bac" name="adsr_3" x="518" y="308">
            <params>
               <frac32.s.map name="a" value="-64.0"/>
               <frac32.s.map name="d" onParent="true" value="22.0"/>
               <frac32.u.map name="s" value="0.0"/>
               <frac32.s.map name="r" value="-26.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_2" x="644" y="322">
            <params/>
            <attribs/>
         </obj>
         <obj type="osc/saw" uuid="739ecc36017ef3249479b8f01716b8bbfba9abc1" name="saw_1" x="392" y="420">
            <params>
               <frac32.s.map name="pitch" value="-12.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_3" x="644" y="448">
            <params/>
            <attribs/>
         </obj>
         <obj type="env/adsr" uuid="d1dbcc5fa6f87b98a6a91c87fd44acee5e690bac" name="adsr_2" x="518" y="518">
            <params>
               <frac32.s.map name="a" value="-64.0"/>
               <frac32.s.map name="d" onParent="true" value="-28.0"/>
               <frac32.u.map name="s" value="0.0"/>
               <frac32.s.map name="r" value="-39.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_2" x="714" y="602">
            <params/>
            <attribs/>
         </obj>
         <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_4" x="714" y="658">
            <params/>
            <attribs/>
         </obj>
         <obj type="mix/mix 5" uuid="60fd43468dd62b4c6df760fdfae121797a778e82" name="mix_1" x="924" y="672">
            <params>
               <frac32.u.map name="gain1" value="64.0"/>
               <frac32.u.map name="gain2" value="43.0"/>
               <frac32.u.map name="gain3" value="42.0"/>
               <frac32.u.map name="gain4" value="59.0"/>
               <frac32.u.map name="gain5" value="32.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="noise/pink" uuid="72c03a2468ee865f248733fcf9b12d4cf42b5a61" name="pink_1" x="364" y="686">
            <params/>
            <attribs/>
         </obj>
         <obj type="filter/bp m" uuid="f26437572c3a1f6be883bb219c773a9906ff8296" name="bp_1" x="812" y="686">
            <params>
               <frac32.s.map name="pitch" onParent="true" value="-13.0"/>
               <frac32.u.map name="reso" value="27.5"/>
            </params>
            <attribs/>
         </obj>
         <patchobj type="patch/object" uuid="55786325-b329-4380-96c6-15e275c99e04" name="vcf4pole2x_1" x="1008" y="686">
            <params>
               <frac32.s.map name="pitch" onParent="true" value="-39.0"/>
               <frac32.u.map name="reso" value="8.0"/>
            </params>
            <attribs/>
            <object id="patch/object" uuid="55786325-b329-4380-96c6-15e275c99e04">
               <sDescription>Four pole VCF
The cutoff frequency is limited to 9.4kHz. For higher cutoff frequencies, use the vcf4pole2x version.</sDescription>
               <author>Johannes Taelman</author>
               <license>GPL</license>
               <helpPatch>vcf4pole.axh</helpPatch>
               <inlets>
                  <frac32buffer name="in"/>
                  <frac32.bipolar name="pitch"/>
                  <frac32.positive name="reso"/>
               </inlets>
               <outlets>
                  <frac32buffer name="out"/>
               </outlets>
               <displays/>
               <params>
                  <frac32.s.map.pitch name="pitch"/>
                  <frac32.u.map name="reso"/>
               </params>
               <attribs/>
               <includes/>
               <code.declaration><![CDATA[/* based on https://github.com/ddiakopoulos/MoogLadders/blob/master/src/RKSimulationModel.h 
*
Copyright (c) 2015, Miller Puckette. All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*/

int32_t cutoff=0;
int32_t resonance=0;

int32_t clip(int32_t x) {
	return __SSAT(x,28);
}

int32_t state[4];

int32_t MultCutoff_A(int32_t x) {
	return ___SMMUL(x, cutoff);
}

void calculateDerivatives_A(int32_t input, int32_t * dstate, int32_t * sstate)
{
	int32_t satstate0 = clip(sstate[0]);
	int32_t satstate1 = clip(sstate[1]);
	int32_t satstate2 = clip(sstate[2]);
	int32_t satstate3 = clip(sstate[3]);
	
	dstate[0] = MultCutoff_A(clip(input - (___SMMUL(resonance,sstate[3])<<4)) - satstate0);
	dstate[1] = MultCutoff_A(satstate0 - satstate1);
	dstate[2] = MultCutoff_A(satstate1 - satstate2);
	dstate[3] = MultCutoff_A(satstate2 - satstate3);
}

void rungekutteSolver_A(int32_t input)
{
	int i;
	int32_t deriv1[4], deriv2[4], deriv3[4], deriv4[4], tempState[4];
	
	calculateDerivatives_A(input, deriv1, state);
	
	for (i = 0; i < 4; i++)
		tempState[i] = state[i] + (deriv1[i]);
	
	calculateDerivatives_A(input, deriv2, tempState);
	
	for (i = 0; i < 4; i++)
		tempState[i] = state[i] + (deriv2[i]);
	
	calculateDerivatives_A(input, deriv3, tempState);
	
	for (i = 0; i < 4; i++)
		tempState[i] = state[i] + (deriv3[i]<<1);
	
	calculateDerivatives_A(input, deriv4, tempState);
	
	for (i = 0; i < 4; i++)
		state[i] = ___SMMLA(deriv1[i]+deriv4[i] + ((deriv2[i] + deriv3[i])<<1),(int)(0xFFFFFFFFu/3u),state[i]);
}

int32_t MultCutoff_B(int32_t x) {
	return ___SMMLA(x, cutoff, x);
}

void calculateDerivatives_B(int32_t input, int32_t * dstate, int32_t * sstate)
{
	int32_t satstate0 = clip(sstate[0]);
	int32_t satstate1 = clip(sstate[1]);
	int32_t satstate2 = clip(sstate[2]);
	int32_t satstate3 = clip(sstate[3]);
	
	dstate[0] = MultCutoff_B(clip(input - (___SMMUL(resonance,sstate[3])<<4)) - satstate0);
	dstate[1] = MultCutoff_B(satstate0 - satstate1);
	dstate[2] = MultCutoff_B(satstate1 - satstate2);
	dstate[3] = MultCutoff_B(satstate2 - satstate3);
}

void rungekutteSolver_B(int32_t input)
{
	int i;
	int32_t deriv1[4], deriv2[4], deriv3[4], deriv4[4], tempState[4];
	
	calculateDerivatives_B(input, deriv1, state);
	
	for (i = 0; i < 4; i++)
		tempState[i] = state[i] + (deriv1[i]);
	
	calculateDerivatives_B(input, deriv2, tempState);
	
	for (i = 0; i < 4; i++)
		tempState[i] = state[i] + (deriv2[i]);
	
	calculateDerivatives_B(input, deriv3, tempState);
	
	for (i = 0; i < 4; i++)
		tempState[i] = state[i] + (deriv3[i]<<1);
	
	calculateDerivatives_B(input, deriv4, tempState);
	
	for (i = 0; i < 4; i++)
		state[i] = ___SMMLA(deriv1[i]+deriv4[i] + ((deriv2[i] + deriv3[i])<<1),(int)(0xFFFFFFFFu/3u),state[i]);
}]]></code.declaration>
               <code.krate><![CDATA[int pitch1=param_pitch + inlet_pitch - 0x01000000;
if (pitch1>0x08400000)
	pitch1=0x08400000;
int32_t freq;
MTOFEXTENDED(pitch1,freq);
cutoff = (freq<<1);
resonance = __USAT(param_reso+inlet_reso,28)<<3;
resonance += resonance>>6;

if (cutoff>0) {
	// case A	
	int i;
	for(int i=0;i<BUFSIZE;i++){
		rungekutteSolver_A(inlet_in[i]);
		rungekutteSolver_A(inlet_in[i]);
		outlet_out[i] = state[3];
	}
} else {
	// case B
	int i;
	for(int i=0;i<BUFSIZE;i++){
		rungekutteSolver_B(inlet_in[i]);
		rungekutteSolver_B(inlet_in[i]);
		outlet_out[i] = state[3];
	}	
}]]></code.krate>
            </object>
         </patchobj>
         <obj type="env/d" uuid="190ae648e41832b41adbedb465317c18a010aefe" name="d_1" x="560" y="756">
            <params>
               <frac32.s.map name="d" onParent="true" value="-62.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="mix/mix 2" uuid="30c04239c88e09d3fa5c333b784ecf54f1b0e268" name="mix_3" x="1148" y="756">
            <params>
               <frac32.u.map name="gain1" onParent="true" value="39.5"/>
               <frac32.u.map name="gain2" onParent="true" value="7.5"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/outlet a" uuid="abd8c5fd3b0524a6630f65cad6dc27f6c58e2a3e" name="outlet_1" x="1302" y="798">
            <params/>
            <attribs/>
         </obj>
         <nets>
            <net>
               <source obj="sine_1" outlet="wave"/>
               <dest obj="vca_1" inlet="a"/>
            </net>
            <net>
               <source obj="tri_1" outlet="wave"/>
               <dest obj="vca_2" inlet="a"/>
            </net>
            <net>
               <source obj="saw_1" outlet="wave"/>
               <dest obj="vca_3" inlet="a"/>
            </net>
            <net>
               <source obj="vca_1" outlet="o"/>
               <dest obj="mix_1" inlet="in1"/>
            </net>
            <net>
               <source obj="vca_2" outlet="o"/>
               <dest obj="mix_1" inlet="in2"/>
            </net>
            <net>
               <source obj="vca_3" outlet="o"/>
               <dest obj="mix_1" inlet="in3"/>
               <dest obj="sine_1" inlet="phase"/>
            </net>
            <net>
               <source obj="mix_1" outlet="out"/>
               <dest obj="vcf4pole2x_1" inlet="in"/>
            </net>
            <net>
               <source obj="adsr_1" outlet="env"/>
               <dest obj="vca_1" inlet="v"/>
            </net>
            <net>
               <source obj="keyb_1" outlet="gate2"/>
               <dest obj="adsr_1" inlet="gate"/>
               <dest obj="adsr_3" inlet="gate"/>
               <dest obj="ahd_1" inlet="gate"/>
               <dest obj="d_1" inlet="trig"/>
            </net>
            <net>
               <source obj="keyb_1" outlet="gate"/>
               <dest obj="adsr_2" inlet="gate"/>
            </net>
            <net>
               <source obj="adsr_3" outlet="env"/>
               <dest obj="vca_2" inlet="v"/>
            </net>
            <net>
               <source obj="adsr_2" outlet="env"/>
               <dest obj="vca_3" inlet="v"/>
            </net>
            <net>
               <source obj="keyb_1" outlet="velocity"/>
               <dest obj="*_2" inlet="b"/>
               <dest obj="vcf4pole2x_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="mix_2" outlet="out"/>
               <dest obj="sine_1" inlet="pitch"/>
               <dest obj="tri_1" inlet="pitch"/>
               <dest obj="saw_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="keyb_1" outlet="note"/>
               <dest obj="mix_2" inlet="bus_in"/>
               <dest obj="bp_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="bend_1" outlet="bend"/>
               <dest obj="mix_2" inlet="in1"/>
            </net>
            <net>
               <source obj="sine_2" outlet="wave"/>
               <dest obj="*_1" inlet="a"/>
            </net>
            <net>
               <source obj="*_1" outlet="result"/>
               <dest obj="mix_2" inlet="in2"/>
            </net>
            <net>
               <source obj="ahd_1" outlet="env"/>
               <dest obj="*_1" inlet="b"/>
            </net>
            <net>
               <source obj="pink_1" outlet="out"/>
               <dest obj="vca_4" inlet="a"/>
            </net>
            <net>
               <source obj="vcf4pole2x_1" outlet="out"/>
               <dest obj="mix_3" inlet="in1"/>
            </net>
            <net>
               <source obj="bp_1" outlet="out"/>
               <dest obj="mix_3" inlet="in2"/>
            </net>
            <net>
               <source obj="vca_4" outlet="o"/>
               <dest obj="bp_1" inlet="in"/>
            </net>
            <net>
               <source obj="*_2" outlet="result"/>
               <dest obj="vca_4" inlet="v"/>
            </net>
            <net>
               <source obj="d_1" outlet="env"/>
               <dest obj="*_2" inlet="a"/>
            </net>
            <net>
               <source obj="mix_3" outlet="out"/>
               <dest obj="outlet_1" inlet="outlet"/>
            </net>
         </nets>
         <settings>
            <subpatchmode>polyphonic</subpatchmode>
            <MidiChannel>1</MidiChannel>
            <NPresets>8</NPresets>
            <NPresetEntries>32</NPresetEntries>
            <NModulationSources>8</NModulationSources>
            <NModulationTargetsPerSource>8</NModulationTargetsPerSource>
         </settings>
         <notes><![CDATA[]]></notes>
         <windowPos>
            <x>0</x>
            <y>0</y>
            <width>1487</width>
            <height>1025</height>
         </windowPos>
      </subpatch>
   </patcher>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_1" x="350" y="252">
      <params>
         <frac32.u.map name="amp" value="48.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="dist/soft" uuid="e680d76a805e4866027cdf654c7efd8b2e54622" name="soft_1" x="532" y="252">
      <params/>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="658" y="252">
      <params/>
      <attribs/>
   </obj>
   <obj type="lfo/square" uuid="de6909eb64db13af5b43f979a4c130024b3a4793" name="square_1" x="98" y="672">
      <params>
         <frac32.s.map name="pitch" value="4.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_1" x="210" y="672">
      <params>
         <int32 name="maximum" value="22"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sel/sel b 32" uuid="3456f885131208fcf1d29ec444588d8e0dc2d066" name="sel_1" x="308" y="672">
      <params>
         <bin32 name="b32" value="85"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/out/digital" uuid="320eed040f6c55bb24c56416596ac2e67d0c82bc" name="digital_1" x="728" y="672">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PC5"/>
         <combo attributeName="mode" selection="Push pull"/>
      </attribs>
   </obj>
   <nets>
      <net>
         <source obj="*c_1" outlet="out"/>
         <dest obj="soft_1" inlet="in"/>
      </net>
      <net>
         <source obj="soft_1" outlet="out"/>
         <dest obj="out_1" inlet="left"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="digital_3" outlet="out"/>
         <dest obj="inv_3" inlet="i"/>
      </net>
      <net>
         <source obj="digital_4" outlet="out"/>
         <dest obj="inv_4" inlet="i"/>
      </net>
      <net>
         <source obj="inv_3" outlet="o"/>
         <dest obj="delayedpulse_1" inlet="trig"/>
      </net>
      <net>
         <source obj="inv_4" outlet="o"/>
         <dest obj="delayedpulse_2" inlet="trig"/>
      </net>
      <net>
         <source obj="delayedpulse_1" outlet="pulse"/>
         <dest obj="load_2" inlet="trig"/>
      </net>
      <net>
         <source obj="delayedpulse_2" outlet="pulse"/>
         <dest obj="load_3" inlet="trig"/>
      </net>
      <net>
         <source obj="patcher_1" outlet="outlet_1"/>
         <dest obj="*c_1" inlet="in"/>
      </net>
      <net>
         <source obj="square_1" outlet="wave"/>
         <dest obj="counter_1" inlet="trig"/>
      </net>
      <net>
         <source obj="counter_1" outlet="o"/>
         <dest obj="sel_1" inlet="in"/>
      </net>
      <net>
         <source obj="sel_1" outlet="o"/>
         <dest obj="digital_1" inlet="in"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>321</x>
      <y>92</y>
      <width>1429</width>
      <height>1026</height>
   </windowPos>
</patch-1.0>